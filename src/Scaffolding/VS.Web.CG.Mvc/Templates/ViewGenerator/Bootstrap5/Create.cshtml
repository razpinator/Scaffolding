@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<div class="bg-white shadow-lg rounded-lg p-6">
    @:<h4 class="text-xl font-semibold text-gray-900 mb-4">@Model.ViewDataTypeShortName</h4>
    @:<hr class="border-gray-200 mb-6" />
    @:<div class="max-w-md">
        @:<form asp-action="@Model.ViewName" class="space-y-4">
            @:<div asp-validation-summary="ModelOnly" class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4"></div>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
    @:<script src="https://cdn.tailwindcss.com"></script>
@:</head>
@:<body class="bg-gray-50">
@:<div class="container mx-auto px-4 py-8">
@:<h1 class="text-3xl font-bold text-gray-900 mb-6">@Model.ViewName</h1>
@:<div class="bg-white shadow-lg rounded-lg p-6">
    @:<h4 class="text-xl font-semibold text-gray-900 mb-4">@Model.ViewDataTypeShortName</h4>
    @:<hr class="border-gray-200 mb-6" />
    @:<div class="max-w-md">
        @:<form asp-action="@Model.ViewName" class="space-y-4">
            @:<div asp-validation-summary="ModelOnly" class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4"></div>
@:
        //    PushIndent("    ");
    }
        foreach (var property in Model.ModelMetadata.Properties)
        {
            if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly)
            {
                if (property.IsForeignKey)
                {
            @:<div class="form-group">
                @:<label asp-for="@property.PropertyName" class="block text-sm font-medium text-gray-700 mb-2"></label>
                @:<select asp-for="@property.PropertyName" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" asp-items="ViewBag.@property.PropertyName"></select>
            @:</div>
                    continue;
                }

                bool isCheckbox = property.TypeName.Equals("System.Boolean");
                if (isCheckbox)
                {
            @:<div class="flex items-center">
                @:<input class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded" type="checkbox" asp-for="@property.PropertyName" />
                @:<label class="ml-2 block text-sm text-gray-700">@@Html.DisplayNameFor(model => model.@GetValueExpression(property))</label>
            @:</div>
                }
                else if (property.IsEnum && !property.IsEnumFlags)
                {
            @:<div class="form-group">
                @:<label asp-for="@property.PropertyName" class="block text-sm font-medium text-gray-700 mb-2"></label>
                @:<select asp-for="@property.PropertyName" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"></select>
                @:<span asp-validation-for="@property.PropertyName" class="text-red-600 text-sm mt-1"></span>
            @:</div>
                }
                else if (property.IsMultilineText)
                {
            @:<div class="form-group">
                @:<label asp-for="@property.PropertyName" class="block text-sm font-medium text-gray-700 mb-2"></label>
                @:<textarea asp-for="@property.PropertyName" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24 resize-vertical"></textarea>
                @:<span asp-validation-for="@property.PropertyName" class="text-red-600 text-sm mt-1"></span>
            @:</div>
                }
                else
                {
            @:<div class="form-group">
                @:<label asp-for="@property.PropertyName" class="block text-sm font-medium text-gray-700 mb-2"></label>
                @:<input asp-for="@property.PropertyName" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
                @:<span asp-validation-for="@property.PropertyName" class="text-red-600 text-sm mt-1"></span>
            @:</div>
                }
            }
        }
        }
            <div class="form-group pt-4">
                <input type="submit" value="Create" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200" />
            </div>
        </form>
    </div>
</div>

<div class="mt-6">
    <a asp-action="Index" class="text-blue-600 hover:text-blue-800 font-medium transition duration-200">← Back to List</a>
</div>

@{
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</div>
@:</body>
@:</html>
    }
}

@{
    if (Model.ReferenceScriptLibraries)
    {
@:@@section Scripts {
    @:@@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
@:}
    }
}

@functions
{
    bool IsPropertyGuid(IPropertyMetadata property)
    {
        return string.Equals("System.Guid", property.TypeName, StringComparison.OrdinalIgnoreCase);
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }
}